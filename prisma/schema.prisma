// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String
  level            String
  password         String
  active           Boolean         @default(false)
  token            String?         @unique
  classrooms       ClassroomUser[]
  mattersId        String?         @db.ObjectId
  subject_teachers Matters?        @relation(name: "subject_teachers", fields: [mattersId], references: [id])
  participants     ClassroomUser[] @relation(name: "participants")
  administrators   ClassroomUser[] @relation(name: "administrators")
  teachers         ClassroomUser[] @relation(name: "teachers")

  @@map("user")
}

model Classroom {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  code          String          @unique
  active_room   Boolean         @default(true)
  matters       Matters[]       @relation(name: "matters")
  ClassroomUser ClassroomUser[]

  @@map("classroom")
}

model ClassroomUser {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  participantId   String?    @db.ObjectId
  participants    User?      @relation(name: "participants", fields: [participantId], references: [id])
  administratorId String?    @db.ObjectId
  administrators  User?      @relation(name: "administrators", fields: [administratorId], references: [id])
  teacherId       String?    @db.ObjectId
  teachers        User?      @relation(name: "teachers", fields: [teacherId], references: [id])
  userId          String?    @db.ObjectId
  User            User?      @relation(fields: [userId], references: [id])
  classroomId     String     @db.ObjectId
  Classroom       Classroom? @relation(fields: [classroomId], references: [id])

  @@map("classroom_user")
}

model Matters {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  subject_teachers User[]    @relation(name: "subject_teachers")
  matters          Classroom @relation(name: "matters", fields: [classroomId], references: [id])
  classroomId      String    @db.ObjectId

  @@map("matters")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String
  level            String
  password         String
  active           Boolean    @default(false)
  token            String?    @unique
  classroomId      String?    @db.ObjectId
  participants     Classroom? @relation(name: "participants", fields: [classroomId], references: [id])
  administrators   Classroom? @relation(name: "administrators", fields: [classroomId], references: [id])
  teachers         Classroom? @relation(name: "teachers", fields: [classroomId], references: [id])
  mattersId        String?    @db.ObjectId
  subject_teachers Matters?   @relation(name: "subject_teachers", fields: [mattersId], references: [id])

  @@map("user")
}

model Classroom {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  code           String    @unique
  active_room    Boolean   @default(true)
  matters        Matters[] @relation(name: "matters")
  participants   User[]    @relation(name: "participants")
  administrators User[]    @relation(name: "administrators")
  teachers       User[]    @relation(name: "teachers")

  @@map("classroom")
}

model Matters {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  subject_teachers User[]    @relation(name: "subject_teachers")
  matters          Classroom @relation(name: "matters", fields: [classroomId], references: [id])
  classroomId      String    @db.ObjectId

  @@map("matters")
}
